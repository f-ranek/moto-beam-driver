<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="14.0">
  <PropertyGroup>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectVersion>7.0</ProjectVersion>
    <ToolchainName>com.Atmel.AVRGCC8.C</ToolchainName>
    <ProjectGuid>{3e0689e5-5d0e-41a4-8f02-d7570e336c99}</ProjectGuid>
    <avrdevice>ATtiny84A</avrdevice>
    <avrdeviceseries>none</avrdeviceseries>
    <OutputType>Executable</OutputType>
    <Language>C</Language>
    <OutputFileName>$(MSBuildProjectName)</OutputFileName>
    <OutputFileExtension>.elf</OutputFileExtension>
    <OutputDirectory>$(MSBuildProjectDirectory)\$(Configuration)</OutputDirectory>
    <AssemblyName>GccApplication1</AssemblyName>
    <Name>LED drive</Name>
    <RootNamespace>GccApplication1</RootNamespace>
    <ToolchainFlavour>AVR_13.2.0</ToolchainFlavour>
    <KeepTimersRunning>true</KeepTimersRunning>
    <OverrideVtor>false</OverrideVtor>
    <CacheFlash>true</CacheFlash>
    <ProgFlashFromRam>true</ProgFlashFromRam>
    <RamSnippetAddress>0x20000000</RamSnippetAddress>
    <UncachedRange />
    <preserveEEPROM>true</preserveEEPROM>
    <OverrideVtorValue>exception_table</OverrideVtorValue>
    <BootSegment>2</BootSegment>
    <ResetRule>0</ResetRule>
    <eraseonlaunchrule>0</eraseonlaunchrule>
    <EraseKey />
    <AsfFrameworkConfig>
      <framework-data xmlns="">
        <options />
        <configurations />
        <files />
        <documentation help="" />
        <offline-documentation help="" />
        <dependencies>
          <content-extension eid="atmel.asf" uuidref="Atmel.ASF" version="3.52.0" />
        </dependencies>
      </framework-data>
    </AsfFrameworkConfig>
    <avrtool>com.atmel.avrdbg.tool.simulator</avrtool>
    <avrtoolserialnumber />
    <avrdeviceexpectedsignature>0x1E930C</avrdeviceexpectedsignature>
    <com_atmel_avrdbg_tool_stk500>
      <ToolOptions>
        <InterfaceProperties>
          <IspClock>125000</IspClock>
        </InterfaceProperties>
        <InterfaceName>ISP</InterfaceName>
      </ToolOptions>
      <ToolType>com.atmel.avrdbg.tool.stk500</ToolType>
      <ToolNumber>
      </ToolNumber>
      <ToolName>STK500</ToolName>
    </com_atmel_avrdbg_tool_stk500>
    <avrtoolinterface>
    </avrtoolinterface>
    <avrtoolinterfaceclock>125000</avrtoolinterfaceclock>
    <com_atmel_avrdbg_tool_simulator>
      <ToolOptions xmlns="">
        <InterfaceProperties>
        </InterfaceProperties>
        <InterfaceName>
        </InterfaceName>
      </ToolOptions>
      <ToolType xmlns="">com.atmel.avrdbg.tool.simulator</ToolType>
      <ToolNumber xmlns="">
      </ToolNumber>
      <ToolName xmlns="">Simulator</ToolName>
    </com_atmel_avrdbg_tool_simulator>
    <custom>
      <ToolOptions xmlns="">
        <InterfaceProperties>
        </InterfaceProperties>
        <InterfaceName>
        </InterfaceName>
      </ToolOptions>
      <ToolType xmlns="">custom</ToolType>
      <ToolNumber xmlns="">
      </ToolNumber>
      <ToolName xmlns="">Custom Programming Tool</ToolName>
    </custom>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <ToolchainSettings>
      <AvrGcc>
        <avrgcc.common.Device>-mmcu=attiny84a -B "%24(PackRepoDir)\atmel\ATtiny_DFP\2.0.368\gcc\dev\attiny84a"</avrgcc.common.Device>
        <avrgcc.common.outputfiles.hex>True</avrgcc.common.outputfiles.hex>
        <avrgcc.common.outputfiles.lss>True</avrgcc.common.outputfiles.lss>
        <avrgcc.common.outputfiles.eep>True</avrgcc.common.outputfiles.eep>
        <avrgcc.common.outputfiles.srec>False</avrgcc.common.outputfiles.srec>
        <avrgcc.common.outputfiles.usersignatures>False</avrgcc.common.outputfiles.usersignatures>
        <avrgcc.compiler.general.ChangeDefaultCharTypeUnsigned>True</avrgcc.compiler.general.ChangeDefaultCharTypeUnsigned>
        <avrgcc.compiler.general.ChangeDefaultBitFieldUnsigned>True</avrgcc.compiler.general.ChangeDefaultBitFieldUnsigned>
        <avrgcc.compiler.symbols.DefSymbols>
          <ListValues>
            <Value>NDEBUG</Value>
          </ListValues>
        </avrgcc.compiler.symbols.DefSymbols>
        <avrgcc.compiler.directories.IncludePaths>
          <ListValues>
            <Value>%24(PackRepoDir)\atmel\ATtiny_DFP\2.0.368\include\</Value>
          </ListValues>
        </avrgcc.compiler.directories.IncludePaths>
        <avrgcc.compiler.optimization.level>Optimize most (-O3)</avrgcc.compiler.optimization.level>
        <avrgcc.compiler.optimization.OtherFlags>-flto -flto-report</avrgcc.compiler.optimization.OtherFlags>
        <avrgcc.compiler.optimization.PackStructureMembers>True</avrgcc.compiler.optimization.PackStructureMembers>
        <avrgcc.compiler.optimization.AllocateBytesNeededForEnum>True</avrgcc.compiler.optimization.AllocateBytesNeededForEnum>
        <avrgcc.compiler.warnings.AllWarnings>True</avrgcc.compiler.warnings.AllWarnings>
        <avrgcc.compiler.warnings.ExtraWarnings>True</avrgcc.compiler.warnings.ExtraWarnings>
        <avrgcc.compiler.miscellaneous.Verbose>True</avrgcc.compiler.miscellaneous.Verbose>
        <avrgcc.compiler.miscellaneous.DoNotDeleteTemporaryFiles>True</avrgcc.compiler.miscellaneous.DoNotDeleteTemporaryFiles>
        <avrgcc.linker.libraries.Libraries>
          <ListValues>
            <Value>libm</Value>
          </ListValues>
        </avrgcc.linker.libraries.Libraries>
        <avrgcc.linker.miscellaneous.LinkerFlags>-flto  -O3 -flto-report</avrgcc.linker.miscellaneous.LinkerFlags>
        <avrgcc.assembler.general.IncludePaths>
          <ListValues>
            <Value>%24(PackRepoDir)\atmel\ATtiny_DFP\2.0.368\include\</Value>
          </ListValues>
        </avrgcc.assembler.general.IncludePaths>
      </AvrGcc>
    </ToolchainSettings>
    <OutputFileName>led_drive</OutputFileName>
    <OutputFileExtension>.elf</OutputFileExtension>
    <PostBuildEvent>$(ToolchainDir)\avr-size "$(OutputFileName)$(OutputFileExtension)"
$(ToolchainDir)\avr-objdump -Pmem-usage "$(OutputFileName)$(OutputFileExtension)"
$(ToolchainDir)\avr-objdump -S --no-addresses -j .fuse "$(OutputFileName)$(OutputFileExtension)" | grep -A 1 -i fuse</PostBuildEvent>
    <PreBuildEvent>@echo off

REM Get the git commit hash
for /f %%i in ('git rev-parse --short HEAD') do set COMMIT_HASH=%%i

REM Get the commit date
for /f "delims=" %%j in ('git log -1 --format^="%%aI"') do set COMMIT_DATE=%%j

REM Check if the repository is dirty
git diff-index --quiet HEAD || set DIRTY_FLAG=*

REM Write the information to a file
echo // autogenerated // &gt;  ..\version_info.c
echo #include ^&lt;avr/pgmspace.h^&gt; &gt;&gt;  ..\version_info.c
echo const char VERSION[] PROGMEM = ^"%DIRTY_FLAG% %COMMIT_HASH% %COMMIT_DATE%^"; &gt;&gt;  ..\version_info.c</PreBuildEvent>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <ToolchainSettings>
      <AvrGcc>
        <avrgcc.common.Device>-mmcu=attiny84a -B "%24(PackRepoDir)\atmel\ATtiny_DFP\2.0.368\gcc\dev\attiny84a"</avrgcc.common.Device>
        <avrgcc.common.outputfiles.hex>True</avrgcc.common.outputfiles.hex>
        <avrgcc.common.outputfiles.lss>True</avrgcc.common.outputfiles.lss>
        <avrgcc.common.outputfiles.eep>True</avrgcc.common.outputfiles.eep>
        <avrgcc.common.outputfiles.srec>False</avrgcc.common.outputfiles.srec>
        <avrgcc.common.outputfiles.usersignatures>False</avrgcc.common.outputfiles.usersignatures>
        <avrgcc.compiler.general.ChangeDefaultCharTypeUnsigned>True</avrgcc.compiler.general.ChangeDefaultCharTypeUnsigned>
        <avrgcc.compiler.general.ChangeDefaultBitFieldUnsigned>True</avrgcc.compiler.general.ChangeDefaultBitFieldUnsigned>
        <avrgcc.compiler.symbols.DefSymbols>
          <ListValues>
            <Value>DEBUG</Value>
          </ListValues>
        </avrgcc.compiler.symbols.DefSymbols>
        <avrgcc.compiler.directories.IncludePaths>
          <ListValues>
            <Value>%24(PackRepoDir)\atmel\ATtiny_DFP\2.0.368\include\</Value>
          </ListValues>
        </avrgcc.compiler.directories.IncludePaths>
        <avrgcc.compiler.optimization.level>Optimize (-O1)</avrgcc.compiler.optimization.level>
        <avrgcc.compiler.optimization.PackStructureMembers>True</avrgcc.compiler.optimization.PackStructureMembers>
        <avrgcc.compiler.optimization.AllocateBytesNeededForEnum>True</avrgcc.compiler.optimization.AllocateBytesNeededForEnum>
        <avrgcc.compiler.optimization.DebugLevel>Default (-g2)</avrgcc.compiler.optimization.DebugLevel>
        <avrgcc.compiler.warnings.AllWarnings>True</avrgcc.compiler.warnings.AllWarnings>
        <avrgcc.compiler.miscellaneous.DoNotDeleteTemporaryFiles>True</avrgcc.compiler.miscellaneous.DoNotDeleteTemporaryFiles>
        <avrgcc.linker.libraries.Libraries>
          <ListValues>
            <Value>libm</Value>
          </ListValues>
        </avrgcc.linker.libraries.Libraries>
        <avrgcc.assembler.general.IncludePaths>
          <ListValues>
            <Value>%24(PackRepoDir)\atmel\ATtiny_DFP\2.0.368\include\</Value>
          </ListValues>
        </avrgcc.assembler.general.IncludePaths>
        <avrgcc.assembler.debugging.DebugLevel>Default (-Wa,-g)</avrgcc.assembler.debugging.DebugLevel>
      </AvrGcc>
    </ToolchainSettings>
    <OutputFileName>led_drive</OutputFileName>
    <OutputFileExtension>.elf</OutputFileExtension>
    <PostBuildEvent>$(ToolchainDir)\avr-size "$(OutputFileName)$(OutputFileExtension)"
$(ToolchainDir)\avr-objdump -Pmem-usage "$(OutputFileName)$(OutputFileExtension)"
$(ToolchainDir)\avr-objdump -S --no-addresses -j .fuse "$(OutputFileName)$(OutputFileExtension)"  | grep -A 1 -i fuse</PostBuildEvent>
    <PreBuildEvent>@echo off

REM Get the git commit hash
for /f %%i in ('git rev-parse --short HEAD') do set COMMIT_HASH=%%i

REM Get the commit date
for /f "delims=" %%j in ('git log -1 --format^="%%aI"') do set COMMIT_DATE=%%j

REM Check if the repository is dirty
git diff-index --quiet HEAD || set DIRTY_FLAG=*

REM Write the information to a file
echo // autogenerated // &gt;  ..\version_info.c
echo #include ^&lt;avr/pgmspace.h^&gt; &gt;&gt;  ..\version_info.c
echo const char VERSION[] PROGMEM = ^"%DIRTY_FLAG% %COMMIT_HASH% %COMMIT_DATE%^"; &gt;&gt;  ..\version_info.c</PreBuildEvent>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Simulation' ">
    <ToolchainSettings>
      <AvrGcc>
        <avrgcc.common.Device>-mmcu=attiny84a -B "%24(PackRepoDir)\atmel\ATtiny_DFP\2.0.368\gcc\dev\attiny84a"</avrgcc.common.Device>
        <avrgcc.common.outputfiles.hex>False</avrgcc.common.outputfiles.hex>
        <avrgcc.common.outputfiles.lss>True</avrgcc.common.outputfiles.lss>
        <avrgcc.common.outputfiles.eep>False</avrgcc.common.outputfiles.eep>
        <avrgcc.common.outputfiles.srec>False</avrgcc.common.outputfiles.srec>
        <avrgcc.common.outputfiles.usersignatures>False</avrgcc.common.outputfiles.usersignatures>
        <avrgcc.compiler.general.ChangeDefaultCharTypeUnsigned>True</avrgcc.compiler.general.ChangeDefaultCharTypeUnsigned>
        <avrgcc.compiler.general.ChangeDefaultBitFieldUnsigned>True</avrgcc.compiler.general.ChangeDefaultBitFieldUnsigned>
        <avrgcc.compiler.symbols.DefSymbols>
          <ListValues>
            <Value>DEBUG</Value>
            <Value>SIMULATION</Value>
          </ListValues>
        </avrgcc.compiler.symbols.DefSymbols>
        <avrgcc.compiler.directories.IncludePaths>
          <ListValues>
            <Value>%24(PackRepoDir)\atmel\ATtiny_DFP\2.0.368\include\</Value>
          </ListValues>
        </avrgcc.compiler.directories.IncludePaths>
        <avrgcc.compiler.optimization.OtherFlags>-finline-functions-called-once -finline-small-functions</avrgcc.compiler.optimization.OtherFlags>
        <avrgcc.compiler.optimization.PackStructureMembers>True</avrgcc.compiler.optimization.PackStructureMembers>
        <avrgcc.compiler.optimization.AllocateBytesNeededForEnum>True</avrgcc.compiler.optimization.AllocateBytesNeededForEnum>
        <avrgcc.compiler.optimization.DebugLevel>Default (-g2)</avrgcc.compiler.optimization.DebugLevel>
        <avrgcc.compiler.warnings.AllWarnings>True</avrgcc.compiler.warnings.AllWarnings>
        <avrgcc.compiler.miscellaneous.DoNotDeleteTemporaryFiles>True</avrgcc.compiler.miscellaneous.DoNotDeleteTemporaryFiles>
        <avrgcc.linker.libraries.Libraries>
          <ListValues>
            <Value>libm</Value>
          </ListValues>
        </avrgcc.linker.libraries.Libraries>
        <avrgcc.assembler.general.IncludePaths>
          <ListValues>
            <Value>%24(PackRepoDir)\atmel\ATtiny_DFP\2.0.368\include\</Value>
          </ListValues>
        </avrgcc.assembler.general.IncludePaths>
        <avrgcc.assembler.debugging.DebugLevel>Default (-Wa,-g)</avrgcc.assembler.debugging.DebugLevel>
      </AvrGcc>
    </ToolchainSettings>
    <OutputPath>Simulation\</OutputPath>
    <OutputFileName>led_drive</OutputFileName>
    <OutputFileExtension>.elf</OutputFileExtension>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="adc.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="adc.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="application.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="application.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="app_adc.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="app_adc.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="main.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="morse.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="morse.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="pin_io.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="pin_io.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="pwm.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="pwm.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="spi.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="spi.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="timer.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="timer.h">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="main.c">
      <SubType>compile</SubType>
    </Compile>
    <Compile Include="version_info.c">
      <SubType>compile</SubType>
    </Compile>
  </ItemGroup>
  <Import Project="$(AVRSTUDIO_EXE_PATH)\\Vs\\Compiler.targets" />
</Project>